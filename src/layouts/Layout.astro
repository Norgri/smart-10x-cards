---
import "../styles/global.css";
import { Toaster } from "sonner";
import Navbar from "../components/layout/Navbar";

interface Props {
  title?: string;
}

const { title = "10x Astro Starter" } = Astro.props;
const { user } = Astro.locals;
const currentPath = Astro.url.pathname;

// Ensure user has the expected shape
const formattedUser = user
  ? {
      id: user.id,
      email: user.email || null,
    }
  : null;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    {formattedUser && <Navbar client:load user={formattedUser} />}
    <main>
      <slot />
    </main>
    <Toaster richColors closeButton position="top-right" client:load />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }

  main {
    padding: 1rem;
  }
</style>

<script>
  // Handle logout functionality
  document.addEventListener("astro:page-load", () => {
    // Logout function
    async function handleLogout() {
      try {
        const response = await fetch("/api/auth/logout", {
          method: "POST",
        });

        if (response.ok) {
          window.location.href = "/auth/login";
        } else {
          console.error("Logout failed");
        }
      } catch (error) {
        console.error("Logout error:", error);
      }
    }

    // Make the logout function globally available
    // @ts-expect-error - handleNavbarLogout is defined in env.d.ts
    window.handleNavbarLogout = handleLogout;

    // Also handle logout button if present
    const logoutBtn = document.querySelector("[data-logout]");
    if (logoutBtn) {
      logoutBtn.addEventListener("click", handleLogout);
    }
  });
</script>
